import { FaFacebookSquare,FaInstagramSquare,FaYoutubeSquare } from "react-icons/fa";

{ /* 3rd social media */}
             {/*<div className="social-media">
             <ul className="social-media-desktop">
                <li>
                    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
  <!--=============== BOXICONS ===============-->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">


  <!-- ===================UNICONS==================== -->
  <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
  
  <!-- =====================Typed JS========================= -->
  <script src="https://cdn.jsdelivr.net/npm/typed.js@2.0.12"></script>
  
                  <a href="https://www.instagram.com/invites/contact/?i=179evc33wft5e&utm_content=kr3xf9j"
                      target="_sakshi">
                   <FaFacebookSquare/>
                   </a>
                </li>
                <li>
                    <a href="https://www.instagram.com/invites/contact/?i=179evc33wft5e&utm_content=kr3xf9j"
                      target="_sakshi">
                    <FaInstagramSquare/>
                    </a>
                </li>
                <li>
                   <a href="https://www.instagram.com/invites/contact/?i=179evc33wft5e&utm_content=kr3xf9j"
                      target="_sakshi">
                    <FaYoutubeSquare/>
                    </a>
                </li>
             </ul>

    </div>*/}


  <nav className='main-nav'>
             <div className='logo'>
             <img src={img} alt=""/>
              <h2><span>T</span>ravel</h2>           
             </div>
             <div className='menu-link'>
             <ul>
                <li>
                    <a href="#">Home</a>
                </li>
                <li>
                    <a href="#">Destination</a>
                </li>
                <li>
                    <a href="#">About</a>
                </li>
                <li>
                    <a href="#">Contact us</a>
                </li>
            
                <li>
                   <a href='#'>Login</a>
                </li>
             </ul>

             </div>
             { /* 3rd social media */}
             <div className="social-media">
             <ul className="social-media-desktop">
                <li>
                    <a href="https://www.instagram.com/invites/contact/?i=179evc33wft5e&utm_content=kr3xf9j">
                     <FaFacebookSquare className= "facebook"/>
                   </a>
                </li>
                <li>
                    <a href="https://www.instagram.com/invites/contact/?i=179evc33wft5e&utm_content=kr3xf9j">
                     <FaInstagramSquare className= "instagram"/>
                    </a>
                </li>
                <li>
                    <a href="https://www.instagram.com/invites/contact/?i=179evc33wft5e&utm_content=kr3xf9j" >
                     <FaYoutubeSquare className= "youtube"/>
                    </a>
                </li>
             </ul>
             </div>
         </nav>
        </div>








*{
  margin: 0;
  padding: 0;
  font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
}
.main{
  width:100%;
  height: 100vh;
}
.video{
  width: 100%;
  height: 100%;
  object-fit:cover;
}
.content{
  position: absolute;
  width: 100%;
  height: 100%;
  top:0;
  display: flex;
  flex-direction:column ;
  justify-content: center;
  align-items: center;
  color: darkslategrey;
}





     {/*<div className='main'>*/}
      {/* <video src={videobg} autoPlay loop muted/> */}
      {/* <div className='content'>
        <h1>Welcome to World</h1>
      </div> */}
  {/*import videobg from "./assets/videobg.mp4";*/}
  
  
  
  
  
  }
.main-nav{
    width: 100%;
    height: 7rem;
    display:grid;
    grid-template-columns: 10rem 1fr 2fr 1fr 10rem;
    background: -webkit-linear-gradient(rgba(10, 0, 0, 0.733),rgba(112, 12, 244, 0.007));
    -webkit-background-clip:transparent;
    box-shadow: rgba(50,50,93,0.25) 0px 50px 100px -20px,
    rgba(0,0,0,0.3) 0px 30px 60px -30px;
}   
.logo h2{
    grid-column: 2/2;
    position: relative;
    font-size: 2rem;
    margin-right:200px;
    margin-bottom:50px;
    font-weight:400;
    text-transform: uppercase;
    background: -webkit-linear-gradient(rgba(10, 0, 0, 0.733),rgba(112, 12, 244, 0.007));
    -webkit-background-clip: text;
    -webkit-text-fill-color:transparent;
}
{/*}.logo img{
    mix-blend-mode: multiply;
    position: relative;
    float: left;
    width: 100px;
    height: 100px;
    margin-left:50px;
    margin-bottom: 50px;
    
}*/}
.logo h2 span {
    font-size: 3.8rem;
}

.logo {
    display: grid;
    justify-content: start;
    align-items: center;
}
.menu-link ul li {
    font-size: 1.3rem;
    position: relative;
    font-family: Arial, Helvetica, sans-serif;
    margin-top:10px;

}
.menu-link ul li a {
    text-transform: capitalize;
    color: rgba(0,0,3,0.8);
    transition: 0.5s;
}
.menu-link ul li:hover > a {
    transform-origin:left;
    color: rgba(0,0,3,1);
    text-decoration:none;
    transition:0.5s
}
.menu-link {
    grid-column:3/4;
}

.menu-link ul {
    height: 10rem;
    display: flex;
    justify-content: space-around;
    align-items: center;
    position: relative;
    font-family: Arial, Helvetica, sans-serif;
}
/*icons of social mwdia*/
.social-media{
    grid-column:4/5;
}
.social-media ul{
    height: 10rem;
    display:grid;
    grid-template-columns: 3fr repeat(3,1fr);
    align-items: center;
    justify-content: flex-end;
    margin-bottom: 30px;
}
.social-media.ul.li:first-child {
    grid-column: 2/3;
}
.social-media ul li{
    text-align: right;
    position: relative;
    font-size: 1.5rem;
}







#new css

 .logo{
        color: var(--blackColor);
        font-weight: 600;
        cursor: pointer;
        align-items: center;
        justify-content:center;

        .icon{
            font-size: 25px;
            color: var(--PrimaryColor);
            transform: translateY(5px);
        }

    }
    @media screen and (max-width: 768px) {
        .navBar{
            position: absolute;
            background: var(--whiteColorDream);
            height: max-content;
            width: 80%;
            border-radius: 1rem;
            top: 6rem;
            left: 50%;
            padding: 1 rem;
            transform: translate(-50%);
            z-index: 2000;
            box-shadow: 0 2px 4px rgba(2,15,29,0.904);
            transition: .3s ease-in-out;
            
            .navLists{
                flex-direction: column;
                justify-content: center;
                width: 100%;
                margin: auto;
                padding: .5rem 0;
                
                
                .navItem{
                    padding: .5rem 0;
                    
                    .navLink{
                        color: var(--textColor);
                        font-size: 9rem;
                        font-weight: 600;
                        &:hover{
                            color:var(--PrimaryColor);
                        }
                    }
                }
            .btn{
                margin-top: 1rem;

                a{
                    font-weight:600;
                    color: var(--whiteColor);
                }
            } 
        }
        .closeNavbar{
            position: absolute;
            top: 1rem;
            right: 1.5rem;
            color: var(--PrimaryColor);
            &:hover{
                color: var(--SecondaryColor);
            }

        }

    
        }
        
    }
    .toggleNavbar{
        .icon{
            font-size: 25px;
            color: var(--PrimaryColor);
        }
        &:hover.icon{
            color: var(--SecondaryColor);


        }
    }
    
    
    
    
    
    
    
    
    .logo{
    color: var(--blackColor);
    font-weight: 600;
    cursor: pointer;
    align-items: center;
    justify-content:center;
}
.icon{
    font-size: 25px;
    color: var(--PrimaryColor);
    transform: translateY(5px);
} 
@media screen and (max-width: 768px) {
    .navBar{
        position: absolute;
        background: var(--whiteColorDream);
        height: max-content;
        width: 80%;
        border-radius: 1rem;
        top: 6rem;
        left: 50%;
        padding: 1 rem;
        transform: translate(-50%);
        z-index: 2000;
        box-shadow: 0 2px 4px rgba(2,15,29,0.904);
        transition: .3s ease-in-out;
    }    
    .navLists{
        flex-direction: column;
        justify-content: center;
        width: 100%;
        margin: auto;
        padding: .5rem 0;
    }
    .navItem{
        padding: .5rem 0;
    }
    .navLink{
        color: var(--textColor);
        font-size: 9rem;
        font-weight: 600;
    }
    .navlink:hover{
        color:var(--PrimaryColor);
    }
    .btn{
         margin-top: 1rem;
    }
    .btn a{
        font-weight:600;
        color: var(--whiteColor);
    }
} 
.closeNavbar{
    position: absolute;
    top: 1rem;
    right: 1.5rem;
    color: var(--PrimaryColor);
}
.closeNavbar:hover{
    color: var(--SecondaryColor);
}
    
.toggleNavbar.icon{
    font-size: 25px;
    color: var(--PrimaryColor);
}
.toggleNavbar:hover.icon{
    color: var(--SecondaryColor);
}



                value={password}
import React, {useState} from 'react';
import "./login.css";
import videobg from "../../assets/videobg.mp4";
const Login = () => {
    const [email,setEmail] = useState("");
    const [password,setPassword] = useState("");
    const [allEntry,setAllEntry] = useState([]);
    const submitForm = (e) => {
        e.preventDefault();
       const newEntry = { email:email , password:password };
       setAllEntry([...allEntry,newEntry]);
       console.log(allEntry);

    }
    return (
       <div className='main1'> 
          <div className="overlay"> </div>
            <video src={videobg} autoPlay loop muted type="video/mp4"></video>
        <div className='mainform'>  
         <form action="" onSubmit={submitForm}>
            <div className='loginInput'>
                <label htmlfor="email">Email  </label>
                <input type="text" name="email" id="email" autoComplete="off" 
                value={email}
                onChange={(e) => setEmail(e.target.value)}/>
             </div>
             <div className='loginInput'>
                <label htmlfor="password">Password  </label>
                <input type="password" name="password" id="password" autoComplete="off" 
                value={password}
                onChange={(e) => setPassword(e.target.value)}/>
             </div>
               <button type ="submit" className='btn'>Login</button>
        </form>
        <div>
            {
                allEntry.map((curElem) => {
                    return(
                        <div className='showDatastyle'>
                            <p>{curElem.email}</p>
                            <p>{curElem.password}</p>
                        </div>
                    )
                })
            }
        </div>
       </div>
       </div>
       )
}
export default Login;
    
:root{
    --PrimaryColor:hsl(199, 100%, 33%);
    --SecondaryColor:hsl(187,85%,43%);
    --gradientColor:linear-gradient(to right,hsl(187,85%,43%),hsl(199,100%,33%));
    --whiteColor:hsl(0,0%,100%);
    --blackColor:hsl(201,33%,16%);
    --textColor:hsl(240,4%,36%);
    --whiteColorDream:hsl(0,0%,93%);
    --greyText:rgb(190,190,190);
    --inputColor:rgb(239,239,239);
    --bodyColor:rgb(240,240,240);
    --cardBG:rgb(225,225,235);
  }
  



.mainform{
    height: 100%;
    width: max-content;
    padding: 8rem 1.5rem 3rem;
    display: flex;
    row-gap: 4rem;
    flex-direction: column;
    align-items: stretch;
    justify-content: center;
    margin: auto;
    color: var(--whiteColor);
    z-index: 100;
    
    form{
        position:relative;
        padding:5rem 2.5rem;
        background: var(--whiteColor);
        border-radius: 10px;
        gap:1.5rem;

        .loginInput{
            label{
                display: block;
                color: var(--textColor);
                padding-bottom: 10px;
                font-size: 17px;
                font-weight: 500;
            }

        }
    }
    .btn{
        margin-top: 1rem;
        font-weight: 600;
        justify-content: space-between;
        gap: .5rem;
        align-self: center;
    }
}

.main1{
    width: 100%;
    position: relative;
    display: flex;
    align-items:center;
    justify-content: center;
    margin: auto;
    
    .overlay{
        position: absolute;
        height:100%;
        width: 100%;
        background: rgb(47 ,106 ,127);
        top: 0;
        bottom: 0;
        z-index: 1;
        mix-blend-mode: hard-light;
    }
    video{
        position: absolute;
        height: 100%;
        width: 100%;
        top: 0;
        bottom: 0;
        object-fit:cover;
    }

    .mainform{
        height: 100%;
        width: max-content;
        padding: 8rem 1.5rem 3rem;
        display: flex;
        row-gap: 4rem;
        flex-direction: column;
        align-items: stretch;
        justify-content: center;
        margin: auto;
        color: var(--whiteColor);
        z-index: 100;
        
        form{
            position:relative;
            padding:5rem 2.5rem;
            background: var(--whiteColor);
            border-radius: 10px;
            gap:1.5rem;
    
            .loginInput{
                label{
                    display: block;
                    color: var(--textColor);
                    padding-bottom: 10px;
                    font-size: 17px;
                    font-weight: 500;
                }
    
            }
        }
        .btn{
            margin-top: 1rem;
            font-weight: 600;
            justify-content: space-between;
            gap: .5rem;
            align-self: center;
        }
    }
}



import Swal from 'sweetalert2'

function Register() {

    const [email, setEmail] = useState();
    const [password, setPassword] = useState();
    const [passwordVarify, setPasswordVarify] = useState();
    const [name, setName] = useState();
    const [nameError, setNameError] = useState();
    const [emailError, setEmailError] = useState();
    const [passwordError, setPasswordError] = useState();
    const [passwordVarifyError, setPasswordVarifyError] = useState();

    var err_count = 0;


    //function for toast message
    const Toast = Swal.mixin({
        toast: true,
        position: 'top',
        showConfirmButton: false,
        timerProgressBar: true,
        timer: 2000,
        didOpen: (toast) => {
          toast.addEventListener('mouseenter', Swal.stopTimer)
          toast.addEventListener('mouseleave', Swal.resumeTimer)
        }
      })

    function isName(nameValue){
        return /^[a-zA-Z ]{2,}$/.test(name);
    }

    function isEmail(emailValue){
        return /^[A-Za-z_.0-9]{3,}@+[a-z.]{4,7}[.]{1}[comin]{2,3}$/.test(email);
    }

    function isPass(pass){
        return /^[\w!@#$%^&*]{8,}$/.test(pass);
    }

    function isStrongestPass(pass){
        return /^(?=.*[0-9])(?=.*[!@#$%^&*])[\w!@#$%^&*]{8,}$/.test(pass);
    }
    
    function register(e){
        e.preventDefault();

        if(!isPass(password)) {
            setPasswordVarify(undefined);
            err_count += 1;
        }
        else if(!isStrongestPass(password)){
            setPasswordVarify(undefined);
            err_count += 1;
        }
        else if(passwordVarify === undefined)
        {
            setPasswordVarifyError("Confirm your password !")
            err_count += 1;       
            Toast.fire({
                icon: 'error',
                title: 'Confirm your password !'
              })     
        }
        else if(password !== passwordVarify)
        {
            setPasswordVarifyError("Passwords does not match !")
            err_count += 1;  
            Toast.fire({
                icon: 'error',
                title: 'Both Passwords does not match !'
              })          
        }
        else
        {
            setPasswordVarifyError(undefined);
        }


        if(password === undefined)
        {
            setPasswordError("Enter Password !");
            err_count += 1;
            Toast.fire({
                icon: 'error',
                title: 'Set password !'
              })
        }
        else if (!isPass(password)) 
        {
            setPasswordError('Use 8 or more Characters. !');
            err_count += 1;    
            Toast.fire({
                icon: 'error',
                title: 'Password shold be more than 8 characters !'
              })        
        }
        else if(!isStrongestPass(password))
        {
            setPasswordError("Use at least 1 number & 1 symbol. !")
            err_count += 1;         
            Toast.fire({
                icon: 'error',
                title: 'Set strong password !'
              })   
        }
        else{
            setPasswordError(undefined);
        }


        if(email === undefined)
        {
            setEmailError("Enter Your Mail address !");
            err_count += 1;
            Toast.fire({
                icon: 'error',
                title: 'Enter Your Email id !'
              })
        }
        else if(!isEmail(email))
        {
            setEmailError("Invalid Email address !")
            err_count += 1;
            Toast.fire({
                icon: 'error',
                title: 'Invalid Email id !'
              })
        }
        else{
            setEmailError(undefined);
        }


        if(name === undefined) {
            setNameError("Enter Your Name !");
            err_count += 1;
            Toast.fire({
                icon: 'error',
                title: 'Enter Your Name !'
              })
        }
        else if(!isName(name)){
            setNameError("Invalid Name !");
            err_count += 1;  
            Toast.fire({
                icon: 'error',
                title: 'Invalid Name !'
              })
        }
        else {
            setNameError(undefined)
        }
        

        if(err_count === 0)
        {
            setTimeout(
                function() {
                    document.location.href="/register"
                },
                4000
            );
            
            Swal.fire({
            icon: 'success',
            title: 'Registration Successful',
            text: 'Your Account is successfully created',
            })
        }
    }

    return (
        <div className="container-fluid px-1 px-md-5 px-lg-1 px-xl-5 py-5 mx-auto">
        <div className="card card0 border-0">
            <div className="row d-flex">
                <div className="col-lg-6 mt-lg-5">
                    <div className="card1 pb-5 mt-5">
                        <div className="row px-3 justify-content-center mt-5 mb-lg-0 mb-5 border-line"></div>
                    </div>
                </div>
                <form className="col-lg-6" onSubmit={register}>
                    <div className="card2 card border-0 px-4 py-5">
                        <h3 className="text-center">Admin Registration</h3>
                        <center><hr className="w-50"/></center>
                        <div className="row px-3">          
                            <h6 className="mb-0 mt-3 text-sm">Name</h6>
                            <input className="input" type="text" placeholder="Enter Your Name"
                            onChange={(e) => setName(e.target.value)}
                            value={name}
                            />
                            <small><b className="text-danger">{nameError}</b></small>
                        </div>
                        <div className="row px-3"> 
                                <h6 className="mb-0 mt-3 text-sm">Email Address</h6>
                            <input className="input" type="text" placeholder="Enter a valid email address"
                            onChange={(e) => setEmail(e.target.value)}
                            value={email}
                            />
                            <small><b className="text-danger">{emailError}</b></small>
                        </div>
                        <div className="row px-3"> 
                                <h6 className="mb-0 mt-3 text-sm">Password</h6>
                            <input className="input" type="password" placeholder="Enter password"
                            onChange={(e) => setPassword(e.target.value)}
                            value={password}
                            />
                            <small><b className="text-danger">{passwordError}</b></small>
                        </div>
                        <div className="row px-3"> 
                                <h6 className="mb-0 mt-3 text-sm">Confirm Password</h6>
                            <input className="input" type="password" placeholder="Enter password"
                            onChange={(e) => setPasswordVarify(e.target.value)}
                            value={passwordVarify}
                            /> </div>
                            <small><b className="text-danger" id="con_pass">{passwordVarifyError}</b></small><br/>
                        <div className="row mb-3 px-3"> <button type="submit" className="btn btn-primary text-center">Register</button> </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    )
}

export default Register

{/* <h1>Regsiter a new Account</h1>
            <form onSubmit={register}>
                <input type="email" placeholder="Email"
                onChange={(e) => setEmail(e.target.value)}
                value={email}
                />
                <input type="password" placeholder="Password"
                onChange={(e) => setPassword(e.target.value)}
                value={password}
                />
                <input type="password" placeholder="Varify password"
                onChange={(e) => setPasswordVarify(e.target.value)}
                value={passwordVarify}
                />
                <button type="submit">Register</button>                
            </form> */}




.card0 {
    box-shadow: 0px 4px 8px 0px #757575;
    border-radius: 3px;
    margin-left: 0;
    margin-right: 0;
}

.card2 {
    height: 100%;
    width: max-content;
    padding: 10rem 2rem 4rem;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: center;
    margin: auto;
    z-index: 100;
    
    
}


.border-line {
    border-right: 1px solid #EEEEEE
}

.facebook {
    background-color: #3b5998;
    color: #fff;
    font-size: 18px;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    cursor: pointer
}

.twitter {
    background-color: #1DA1F2;
    color: #fff;
    font-size: 18px;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    cursor: pointer
}

.linkedin {
    background-color: #2867B2;
    color: #fff;
    font-size: 18px;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    cursor: pointer
}

.line {
    height: 1px;
    width: 45%;
    background-color: #E0E0E0;
}

.text-sm {
    font-size: 14px !important
}

::placeholder {
    color: #BDBDBD;
    opacity: 1;
    font-weight: 300
}

:-ms-input-placeholder {
    color: #BDBDBD;
    font-weight: 300
}

::-ms-input-placeholder {
    color: #BDBDBD;
    font-weight: 300
}

.input,
.textarea {
    padding: 10px 12px 10px 12px;
    border: 1px solid lightgrey;
    border-radius: 2px;
    margin-bottom: 5px;
    margin-top: 2px;
    width: 100%;
    box-sizing: border-box;
    color: #2C3E50;
    font-size: 14px;
    letter-spacing: 1px
}

.input:focus,
.textarea:focus {
    -moz-box-shadow: none !important;
    -webkit-box-shadow: none !important;
    box-shadow: none !important;
    border: 1px solid #304FFE;
    outline-width: 0
}

.button:focus {
    -moz-box-shadow: none !important;
    -webkit-box-shadow: none !important;
    box-shadow: none !important;
    outline-width: 0
}

a {
    color: inherit;
    cursor: pointer
}

.btn-blue {
    background-color: #1A237E;
    width: 150px;
    color: #fff;
    border-radius: 2px
}

.btn-blue:hover {
    background-color: #000;
    cursor: pointer
}

.bg-blue {
    color: #fff;
    background-color: #1A237E
}

@media screen and (max-width: 991px) {
    .border-line {
        border-right: none
    }

    .card2 {
        border-top: 1px solid #EEEEEE !important;
        position:relative;
        padding:5rem 2.5rem;
        background: var(--whiteColor);
        border-radius: 10px;
        gap:1.5rem;

    }
}

    <title>React App</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.6.0/polyfill.js"></script>
    <script src="https://unpkg.com/react@16.5.0/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16.5.0/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone@7.2.5/babel.min.js"></script>
    <script src="https://surveyjs.azureedge.net/1.8.17/survey.react.min.js"></script>
    <link href="https://surveyjs.azureedge.net/1.8.17/modern.css" type="text/css" rel="stylesheet"/>
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    



